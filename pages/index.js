import Head from "next/head";
import styled from "styled-components";
import { Header } from "../Components/Header/Header";
import { PastPresent } from "../Components/Past-Present/PastPresent";
import { SneakerFeed } from "../Components/SneakerFeed/SneakerFeed";
import { Options } from "../Components/mensWomensKidsSelector/mensWomensKidsSelector";
import { SearchBar } from "../Components/SearchBar/SearchBar";
import { useDispatch, useSelector } from "react-redux";
import { useEffect } from "react";
import { fetchSneakerInfo } from "../store/releaseInfo";
import SideNavBar from "../Components/sideMenu/SideNavBar";
import Menu from "../Components/sideMenu/Menu";
import { format, getDate } from "date-fns";
import { useState } from "react";
import { Footer } from '../Components/Footer/Footer';
import { DesktopMenu } from "../Components/desktopMenu/DesktopMenu";

export default function Home({ data }) {
  const dispatch = useDispatch();
  const [open, setOpen] = useState(false);

  useEffect(() => {
    dispatch(fetchSneakerInfo())
      .then(() => dispatch({ type: "sneaker/splitSneakerInfo" }))
      .then(() => dispatch({ type: "sneaker/filterMonths" }))
      .then(() => dispatch({ type: "sneaker/copyMonthsArray" }));
  }, []);

  const term = useSelector((state) => state.sneaker.searchTerm);

  let info = useSelector((state) => {
    if (state.sneaker.currentSneakerFeedUpcoming === true) {
      const months = Object.keys(state.sneaker.futureMonths);

      return months.map((element) => {
        return state.sneaker.futureSneakerInfoAgeOrGender[element].filter(
          (element) => {
            return element.title.toLowerCase().includes(term.toLowerCase());
          }
        );
      });
    } else {
      const months = Object.keys(state.sneaker.futureMonths);
      return months.map((element) => {
        return state.sneaker.pastSneakerInfoAgeOrGender[element].filter(
          (element) => {
            return element.title.toLowerCase().includes(term.toLowerCase());
          }
        );
      });
    }
  });

  const filter = useSelector(
    (state) => state.sneaker.mensWomensKidsFilterValue
  );

  let filteredResults;

  if (filter === "reset") {
    filteredResults = info;
  } else {
    filteredResults = info.map((element) => {
      return element.filter((element) => element[filter] === true);
    });
  }

  filteredResults.map((element) =>
    element.sort((firstEl, secondEl) => {
      return (
        getDate(new Date(firstEl.date.replace(/, /g, "/"))) -
        getDate(new Date(secondEl.date.replace(/, /g, "/")))
      );
    })
  );

  return (
    <Container>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link
          href="https://fonts.googleapis.com/css2?family=Inter&display=swap"
          rel="stylesheet"
        />
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap" rel="stylesheet"></link>
      </Head>
      <DesktopContentContainer>
        <HeaderContainer>
          <Header />
          <DesktopMenu />
          <SearchNavContainer>
            <SearchBar sneaker={true} />
            <NavContainer>
              <SideNavBar open={open} setOpen={setOpen} />
              <Menu open={open} setOpen={setOpen} />
            </NavContainer>
          </SearchNavContainer>
        </HeaderContainer>

        <PastPresent sneaker={true} clothing={false} />
        <Options sneaker={true} clothing={false} />
        <SneakerFeed filteredResults={filteredResults} />
        <Footer />
      </DesktopContentContainer>
    </Container>
  );
}

const HeaderContainer = styled.div`
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%;

  @media (min-width: 768px) {
    border-top: 1px solid #c0c0c0;
    border-bottom: 1px solid #c0c0c0;
    padding: 20px;
    font-size: 27px;
    position:sticky;
    background-color: white;
    z-index: 30;
    position: fixed;
    right: 0;
    left: 0;
    margin: 0 auto;
    width: 70%;
  }

`;

const Container = styled.div`
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #f5f5f5;
  overflow: hidden;
`;

const SearchNavContainer = styled.div`
  display: flex;
`;

const NavContainer = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
`;

const DesktopContentContainer = styled.div`
  @media (min-width: 768px) {
    width: 70%;
    background-color: white;
  }
`